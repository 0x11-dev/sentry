// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ProjectTags renders 1`] = `
<ProjectTags
  params={
    Object {
      "orgId": "org-slug",
      "projectId": "project-slug",
    }
  }
>
  <SideEffect(DocumentTitle)
    title="Sentry"
  >
    <DocumentTitle
      title="Sentry"
    >
      <SettingsPageHeading
        noTitleStyles={false}
        title="Tags"
      >
        <Wrapper>
          <div
            className="css-1r5ylk7-Wrapper e1kblvez2"
          >
            <ForwardRef
              alignItems="center"
            >
              <Styled(div)
                alignItems="center"
              >
                <div
                  className="css-5ipae5"
                >
                  <Title
                    styled={false}
                  >
                    <div
                      className="css-1ky52ze-Title e1kblvez0"
                    >
                      <HeaderTitle>
                        <h4
                          className="css-1w8ttcn-HeaderTitle e6lvex72"
                        >
                          Tags
                        </h4>
                      </HeaderTitle>
                    </div>
                  </Title>
                </div>
              </Styled(div)>
            </ForwardRef>
          </div>
        </Wrapper>
      </SettingsPageHeading>
      <PermissionAlert
        access={
          Array [
            "project:write",
          ]
        }
      >
        <withConfig(AccessContainer)
          access={
            Array [
              "project:write",
            ]
          }
        >
          <AccessContainer
            access={
              Array [
                "project:write",
              ]
            }
            config={
              Object {
                "features": Set {},
                "messages": Array [],
                "user": Object {
                  "email": "foo@example.com",
                  "flags": Object {
                    "newsletter_consent_prompt": false,
                  },
                  "hasPasswordAuth": true,
                  "id": "1",
                  "isAuthenticated": true,
                  "name": "Foo Bar",
                  "options": Object {
                    "timezone": "UTC",
                  },
                  "permissions": Set {},
                  "username": "foo@example.com",
                },
              }
            }
          >
            <Access
              access={
                Array [
                  "project:write",
                ]
              }
              config={
                Object {
                  "features": Set {},
                  "messages": Array [],
                  "user": Object {
                    "email": "foo@example.com",
                    "flags": Object {
                      "newsletter_consent_prompt": false,
                    },
                    "hasPasswordAuth": true,
                    "id": "1",
                    "isAuthenticated": true,
                    "name": "Foo Bar",
                    "options": Object {
                      "timezone": "UTC",
                    },
                    "permissions": Set {},
                    "username": "foo@example.com",
                  },
                }
              }
              configUser={
                Object {
                  "email": "foo@example.com",
                  "flags": Object {
                    "newsletter_consent_prompt": false,
                  },
                  "hasPasswordAuth": true,
                  "id": "1",
                  "isAuthenticated": true,
                  "name": "Foo Bar",
                  "options": Object {
                    "timezone": "UTC",
                  },
                  "permissions": Set {},
                  "username": "foo@example.com",
                }
              }
              organization={
                Object {
                  "access": Array [
                    "org:read",
                    "org:write",
                    "org:admin",
                    "org:integrations",
                    "project:read",
                    "project:write",
                    "project:admin",
                    "team:read",
                    "team:write",
                    "team:admin",
                  ],
                  "features": Array [],
                  "id": "3",
                  "name": "Organization Name",
                  "onboardingTasks": Array [],
                  "projects": Array [],
                  "scrapeJavaScript": true,
                  "slug": "org-slug",
                  "status": Object {
                    "id": "active",
                    "name": "active",
                  },
                  "teams": Array [],
                }
              }
              renderNoAccessMessage={false}
              requireAll={true}
            />
          </AccessContainer>
        </withConfig(AccessContainer)>
      </PermissionAlert>
      <TextBlock>
        <Component
          className="css-1geyb25-TextBlock ec8ep340"
        >
          <div
            className="css-1geyb25-TextBlock ec8ep340"
          >
            <span
              key="5"
            >
              <span
                key="0"
              >
                Each event in Sentry may be annotated with various tags (key and value pairs).
                 Learn how to 
              </span>
              <ExternalLink
                href="https://docs.sentry.io/hosted/learn/context/"
                key="2"
                rel="noreferrer noopener"
                target="_blank"
              >
                <a
                  href="https://docs.sentry.io/hosted/learn/context/"
                  rel="noreferrer noopener"
                  target="_blank"
                >
                  <span
                    key="1"
                  >
                    add custom tags
                  </span>
                </a>
              </ExternalLink>
              <span
                key="3"
              >
                .
              </span>
            </span>
          </div>
        </Component>
      </TextBlock>
      <Panel>
        <Component
          className="css-yahxlu-Panel e1laxa7d0"
        >
          <div
            className="css-yahxlu-Panel e1laxa7d0"
          >
            <PanelHeader>
              <Component
                className="css-xhx6pj-PanelHeader-getPadding e1p8v8nv0"
              >
                <ForwardRef
                  alignItems="center"
                  className="css-xhx6pj-PanelHeader-getPadding e1p8v8nv0"
                  justifyContent="space-between"
                >
                  <Styled(div)
                    alignItems="center"
                    className="css-xhx6pj-PanelHeader-getPadding e1p8v8nv0"
                    justifyContent="space-between"
                  >
                    <div
                      className="css-xhx6pj-PanelHeader-getPadding e1p8v8nv0 css-v7pzd9"
                    >
                      <ForwardRef>
                        <Styled(div)>
                          <div
                            className="css-sncxrr"
                          >
                            <ForwardRef
                              flex="1"
                            >
                              <Styled(div)
                                flex="1"
                              >
                                <div
                                  className="css-vti0ei"
                                >
                                  Tags
                                </div>
                              </Styled(div)>
                            </ForwardRef>
                          </div>
                        </Styled(div)>
                      </ForwardRef>
                    </div>
                  </Styled(div)>
                </ForwardRef>
              </Component>
            </PanelHeader>
            <PanelBody
              direction="column"
              disablePadding={true}
              flex={false}
            >
              <div
                className="css-9vq8an-textStyles"
              >
                <withConfig(AccessContainer)
                  access={
                    Array [
                      "project:write",
                    ]
                  }
                >
                  <AccessContainer
                    access={
                      Array [
                        "project:write",
                      ]
                    }
                    config={
                      Object {
                        "features": Set {},
                        "messages": Array [],
                        "user": Object {
                          "email": "foo@example.com",
                          "flags": Object {
                            "newsletter_consent_prompt": false,
                          },
                          "hasPasswordAuth": true,
                          "id": "1",
                          "isAuthenticated": true,
                          "name": "Foo Bar",
                          "options": Object {
                            "timezone": "UTC",
                          },
                          "permissions": Set {},
                          "username": "foo@example.com",
                        },
                      }
                    }
                  >
                    <Access
                      access={
                        Array [
                          "project:write",
                        ]
                      }
                      config={
                        Object {
                          "features": Set {},
                          "messages": Array [],
                          "user": Object {
                            "email": "foo@example.com",
                            "flags": Object {
                              "newsletter_consent_prompt": false,
                            },
                            "hasPasswordAuth": true,
                            "id": "1",
                            "isAuthenticated": true,
                            "name": "Foo Bar",
                            "options": Object {
                              "timezone": "UTC",
                            },
                            "permissions": Set {},
                            "username": "foo@example.com",
                          },
                        }
                      }
                      configUser={
                        Object {
                          "email": "foo@example.com",
                          "flags": Object {
                            "newsletter_consent_prompt": false,
                          },
                          "hasPasswordAuth": true,
                          "id": "1",
                          "isAuthenticated": true,
                          "name": "Foo Bar",
                          "options": Object {
                            "timezone": "UTC",
                          },
                          "permissions": Set {},
                          "username": "foo@example.com",
                        }
                      }
                      organization={
                        Object {
                          "access": Array [
                            "org:read",
                            "org:write",
                            "org:admin",
                            "org:integrations",
                            "project:read",
                            "project:write",
                            "project:admin",
                            "team:read",
                            "team:write",
                            "team:admin",
                          ],
                          "features": Array [],
                          "id": "3",
                          "name": "Organization Name",
                          "onboardingTasks": Array [],
                          "projects": Array [],
                          "scrapeJavaScript": true,
                          "slug": "org-slug",
                          "status": Object {
                            "id": "active",
                            "name": "active",
                          },
                          "teams": Array [],
                        }
                      }
                      renderNoAccessMessage={false}
                      requireAll={true}
                    >
                      <PanelItem
                        alignItems="center"
                        className="ref-tag-row"
                        key="browser"
                        p={0}
                      >
                        <div
                          className="ref-tag-row css-1mkt2d7-PanelItem eo8n7lk0"
                        >
                          <ForwardRef
                            alignItems="flex-end"
                            flex="1"
                            p={2}
                          >
                            <Styled(div)
                              alignItems="flex-end"
                              flex="1"
                              p={2}
                            >
                              <div
                                className="css-ahv9sc"
                              >
                                <span>
                                  browser
                                </span>
                              </div>
                            </Styled(div)>
                          </ForwardRef>
                          <ForwardRef
                            alignItems="center"
                            p={2}
                          >
                            <Styled(div)
                              alignItems="center"
                              p={2}
                            >
                              <div
                                className="css-1ioydag"
                              >
                                <Tooltip
                                  disabled={true}
                                  title="This tag cannot be deleted."
                                >
                                  <LinkWithConfirmation
                                    disabled={false}
                                    message="Are you sure you want to remove this tag?"
                                    onConfirm={[Function]}
                                    title="Remove tag?"
                                  >
                                    <Confirm
                                      cancelText="Cancel"
                                      confirmText="Confirm"
                                      disableConfirmButton={false}
                                      disabled={false}
                                      message="Are you sure you want to remove this tag?"
                                      onConfirm={[Function]}
                                      priority="primary"
                                      stopPropagation={false}
                                    >
                                      <a
                                        className=""
                                        disabled={false}
                                        onClick={[Function]}
                                        title="Remove tag?"
                                      >
                                        <Button
                                          data-test-id="delete"
                                          disabled={false}
                                          icon="icon-trash"
                                          size="xsmall"
                                        >
                                          <StyledButton
                                            aria-disabled={false}
                                            data-test-id="delete"
                                            disabled={false}
                                            onClick={[Function]}
                                            role="button"
                                            size="xsmall"
                                          >
                                            <Component
                                              aria-disabled={false}
                                              className="css-dkprmi-StyledButton-getColors eqrebog0"
                                              data-test-id="delete"
                                              onClick={[Function]}
                                              role="button"
                                              size="xsmall"
                                            >
                                              <button
                                                aria-disabled={false}
                                                className="css-dkprmi-StyledButton-getColors eqrebog0"
                                                data-test-id="delete"
                                                onClick={[Function]}
                                                role="button"
                                                size="xsmall"
                                              >
                                                <ButtonLabel
                                                  size="xsmall"
                                                >
                                                  <Component
                                                    className="css-uthd1f-ButtonLabel eqrebog1"
                                                    size="xsmall"
                                                  >
                                                    <span
                                                      className="css-uthd1f-ButtonLabel eqrebog1"
                                                    >
                                                      <Icon
                                                        hasChildren={false}
                                                        size="xsmall"
                                                      >
                                                        <Component
                                                          className="css-ljhpxy-Icon eqrebog2"
                                                          hasChildren={false}
                                                          size="xsmall"
                                                        >
                                                          <span
                                                            className="css-ljhpxy-Icon eqrebog2"
                                                            size="xsmall"
                                                          >
                                                            <StyledInlineSvg
                                                              size="12px"
                                                              src="icon-trash"
                                                            >
                                                              <InlineSvg
                                                                className="css-1ov3rcq-StyledInlineSvg eqrebog3"
                                                                size="12px"
                                                                src="icon-trash"
                                                              >
                                                                <StyledSvg
                                                                  className="css-1ov3rcq-StyledInlineSvg eqrebog3"
                                                                  height="12px"
                                                                  viewBox={Object {}}
                                                                  width="12px"
                                                                >
                                                                  <svg
                                                                    className="eqrebog3 css-1jjmnki-StyledSvg-StyledInlineSvg e2idor0"
                                                                    height="12px"
                                                                    viewBox={Object {}}
                                                                    width="12px"
                                                                  >
                                                                    <use
                                                                      href="#test"
                                                                      xlinkHref="#test"
                                                                    />
                                                                  </svg>
                                                                </StyledSvg>
                                                              </InlineSvg>
                                                            </StyledInlineSvg>
                                                          </span>
                                                        </Component>
                                                      </Icon>
                                                    </span>
                                                  </Component>
                                                </ButtonLabel>
                                              </button>
                                            </Component>
                                          </StyledButton>
                                        </Button>
                                      </a>
                                      <Modal
                                        animation={false}
                                        autoFocus={true}
                                        backdrop={true}
                                        bsClass="modal"
                                        dialogComponentClass={[Function]}
                                        enforceFocus={true}
                                        keyboard={true}
                                        manager={
                                          ModalManager {
                                            "add": [Function],
                                            "containers": Array [],
                                            "data": Array [],
                                            "handleContainerOverflow": true,
                                            "hideSiblingNodes": true,
                                            "isTopModal": [Function],
                                            "modals": Array [],
                                            "remove": [Function],
                                          }
                                        }
                                        onHide={[Function]}
                                        renderBackdrop={[Function]}
                                        restoreFocus={true}
                                        show={false}
                                      >
                                        <Modal
                                          autoFocus={true}
                                          backdrop={true}
                                          backdropClassName="modal-backdrop"
                                          containerClassName="modal-open"
                                          enforceFocus={true}
                                          keyboard={true}
                                          manager={
                                            ModalManager {
                                              "add": [Function],
                                              "containers": Array [],
                                              "data": Array [],
                                              "handleContainerOverflow": true,
                                              "hideSiblingNodes": true,
                                              "isTopModal": [Function],
                                              "modals": Array [],
                                              "remove": [Function],
                                            }
                                          }
                                          onEntering={[Function]}
                                          onExited={[Function]}
                                          onHide={[Function]}
                                          renderBackdrop={[Function]}
                                          restoreFocus={true}
                                          show={false}
                                        />
                                      </Modal>
                                    </Confirm>
                                  </LinkWithConfirmation>
                                </Tooltip>
                              </div>
                            </Styled(div)>
                          </ForwardRef>
                        </div>
                      </PanelItem>
                      <PanelItem
                        alignItems="center"
                        className="ref-tag-row"
                        key="device"
                        p={0}
                      >
                        <div
                          className="ref-tag-row css-1mkt2d7-PanelItem eo8n7lk0"
                        >
                          <ForwardRef
                            alignItems="flex-end"
                            flex="1"
                            p={2}
                          >
                            <Styled(div)
                              alignItems="flex-end"
                              flex="1"
                              p={2}
                            >
                              <div
                                className="css-ahv9sc"
                              >
                                <span>
                                  device
                                </span>
                              </div>
                            </Styled(div)>
                          </ForwardRef>
                          <ForwardRef
                            alignItems="center"
                            p={2}
                          >
                            <Styled(div)
                              alignItems="center"
                              p={2}
                            >
                              <div
                                className="css-1ioydag"
                              >
                                <Tooltip
                                  disabled={true}
                                  title="This tag cannot be deleted."
                                >
                                  <LinkWithConfirmation
                                    disabled={false}
                                    message="Are you sure you want to remove this tag?"
                                    onConfirm={[Function]}
                                    title="Remove tag?"
                                  >
                                    <Confirm
                                      cancelText="Cancel"
                                      confirmText="Confirm"
                                      disableConfirmButton={false}
                                      disabled={false}
                                      message="Are you sure you want to remove this tag?"
                                      onConfirm={[Function]}
                                      priority="primary"
                                      stopPropagation={false}
                                    >
                                      <a
                                        className=""
                                        disabled={false}
                                        onClick={[Function]}
                                        title="Remove tag?"
                                      >
                                        <Button
                                          data-test-id="delete"
                                          disabled={false}
                                          icon="icon-trash"
                                          size="xsmall"
                                        >
                                          <StyledButton
                                            aria-disabled={false}
                                            data-test-id="delete"
                                            disabled={false}
                                            onClick={[Function]}
                                            role="button"
                                            size="xsmall"
                                          >
                                            <Component
                                              aria-disabled={false}
                                              className="css-dkprmi-StyledButton-getColors eqrebog0"
                                              data-test-id="delete"
                                              onClick={[Function]}
                                              role="button"
                                              size="xsmall"
                                            >
                                              <button
                                                aria-disabled={false}
                                                className="css-dkprmi-StyledButton-getColors eqrebog0"
                                                data-test-id="delete"
                                                onClick={[Function]}
                                                role="button"
                                                size="xsmall"
                                              >
                                                <ButtonLabel
                                                  size="xsmall"
                                                >
                                                  <Component
                                                    className="css-uthd1f-ButtonLabel eqrebog1"
                                                    size="xsmall"
                                                  >
                                                    <span
                                                      className="css-uthd1f-ButtonLabel eqrebog1"
                                                    >
                                                      <Icon
                                                        hasChildren={false}
                                                        size="xsmall"
                                                      >
                                                        <Component
                                                          className="css-ljhpxy-Icon eqrebog2"
                                                          hasChildren={false}
                                                          size="xsmall"
                                                        >
                                                          <span
                                                            className="css-ljhpxy-Icon eqrebog2"
                                                            size="xsmall"
                                                          >
                                                            <StyledInlineSvg
                                                              size="12px"
                                                              src="icon-trash"
                                                            >
                                                              <InlineSvg
                                                                className="css-1ov3rcq-StyledInlineSvg eqrebog3"
                                                                size="12px"
                                                                src="icon-trash"
                                                              >
                                                                <StyledSvg
                                                                  className="css-1ov3rcq-StyledInlineSvg eqrebog3"
                                                                  height="12px"
                                                                  viewBox={Object {}}
                                                                  width="12px"
                                                                >
                                                                  <svg
                                                                    className="eqrebog3 css-1jjmnki-StyledSvg-StyledInlineSvg e2idor0"
                                                                    height="12px"
                                                                    viewBox={Object {}}
                                                                    width="12px"
                                                                  >
                                                                    <use
                                                                      href="#test"
                                                                      xlinkHref="#test"
                                                                    />
                                                                  </svg>
                                                                </StyledSvg>
                                                              </InlineSvg>
                                                            </StyledInlineSvg>
                                                          </span>
                                                        </Component>
                                                      </Icon>
                                                    </span>
                                                  </Component>
                                                </ButtonLabel>
                                              </button>
                                            </Component>
                                          </StyledButton>
                                        </Button>
                                      </a>
                                      <Modal
                                        animation={false}
                                        autoFocus={true}
                                        backdrop={true}
                                        bsClass="modal"
                                        dialogComponentClass={[Function]}
                                        enforceFocus={true}
                                        keyboard={true}
                                        manager={
                                          ModalManager {
                                            "add": [Function],
                                            "containers": Array [],
                                            "data": Array [],
                                            "handleContainerOverflow": true,
                                            "hideSiblingNodes": true,
                                            "isTopModal": [Function],
                                            "modals": Array [],
                                            "remove": [Function],
                                          }
                                        }
                                        onHide={[Function]}
                                        renderBackdrop={[Function]}
                                        restoreFocus={true}
                                        show={false}
                                      >
                                        <Modal
                                          autoFocus={true}
                                          backdrop={true}
                                          backdropClassName="modal-backdrop"
                                          containerClassName="modal-open"
                                          enforceFocus={true}
                                          keyboard={true}
                                          manager={
                                            ModalManager {
                                              "add": [Function],
                                              "containers": Array [],
                                              "data": Array [],
                                              "handleContainerOverflow": true,
                                              "hideSiblingNodes": true,
                                              "isTopModal": [Function],
                                              "modals": Array [],
                                              "remove": [Function],
                                            }
                                          }
                                          onEntering={[Function]}
                                          onExited={[Function]}
                                          onHide={[Function]}
                                          renderBackdrop={[Function]}
                                          restoreFocus={true}
                                          show={false}
                                        />
                                      </Modal>
                                    </Confirm>
                                  </LinkWithConfirmation>
                                </Tooltip>
                              </div>
                            </Styled(div)>
                          </ForwardRef>
                        </div>
                      </PanelItem>
                      <PanelItem
                        alignItems="center"
                        className="ref-tag-row"
                        key="url"
                        p={0}
                      >
                        <div
                          className="ref-tag-row css-1mkt2d7-PanelItem eo8n7lk0"
                        >
                          <ForwardRef
                            alignItems="flex-end"
                            flex="1"
                            p={2}
                          >
                            <Styled(div)
                              alignItems="flex-end"
                              flex="1"
                              p={2}
                            >
                              <div
                                className="css-ahv9sc"
                              >
                                <span>
                                  url
                                </span>
                              </div>
                            </Styled(div)>
                          </ForwardRef>
                          <ForwardRef
                            alignItems="center"
                            p={2}
                          >
                            <Styled(div)
                              alignItems="center"
                              p={2}
                            >
                              <div
                                className="css-1ioydag"
                              >
                                <Tooltip
                                  disabled={true}
                                  title="This tag cannot be deleted."
                                >
                                  <LinkWithConfirmation
                                    disabled={false}
                                    message="Are you sure you want to remove this tag?"
                                    onConfirm={[Function]}
                                    title="Remove tag?"
                                  >
                                    <Confirm
                                      cancelText="Cancel"
                                      confirmText="Confirm"
                                      disableConfirmButton={false}
                                      disabled={false}
                                      message="Are you sure you want to remove this tag?"
                                      onConfirm={[Function]}
                                      priority="primary"
                                      stopPropagation={false}
                                    >
                                      <a
                                        className=""
                                        disabled={false}
                                        onClick={[Function]}
                                        title="Remove tag?"
                                      >
                                        <Button
                                          data-test-id="delete"
                                          disabled={false}
                                          icon="icon-trash"
                                          size="xsmall"
                                        >
                                          <StyledButton
                                            aria-disabled={false}
                                            data-test-id="delete"
                                            disabled={false}
                                            onClick={[Function]}
                                            role="button"
                                            size="xsmall"
                                          >
                                            <Component
                                              aria-disabled={false}
                                              className="css-dkprmi-StyledButton-getColors eqrebog0"
                                              data-test-id="delete"
                                              onClick={[Function]}
                                              role="button"
                                              size="xsmall"
                                            >
                                              <button
                                                aria-disabled={false}
                                                className="css-dkprmi-StyledButton-getColors eqrebog0"
                                                data-test-id="delete"
                                                onClick={[Function]}
                                                role="button"
                                                size="xsmall"
                                              >
                                                <ButtonLabel
                                                  size="xsmall"
                                                >
                                                  <Component
                                                    className="css-uthd1f-ButtonLabel eqrebog1"
                                                    size="xsmall"
                                                  >
                                                    <span
                                                      className="css-uthd1f-ButtonLabel eqrebog1"
                                                    >
                                                      <Icon
                                                        hasChildren={false}
                                                        size="xsmall"
                                                      >
                                                        <Component
                                                          className="css-ljhpxy-Icon eqrebog2"
                                                          hasChildren={false}
                                                          size="xsmall"
                                                        >
                                                          <span
                                                            className="css-ljhpxy-Icon eqrebog2"
                                                            size="xsmall"
                                                          >
                                                            <StyledInlineSvg
                                                              size="12px"
                                                              src="icon-trash"
                                                            >
                                                              <InlineSvg
                                                                className="css-1ov3rcq-StyledInlineSvg eqrebog3"
                                                                size="12px"
                                                                src="icon-trash"
                                                              >
                                                                <StyledSvg
                                                                  className="css-1ov3rcq-StyledInlineSvg eqrebog3"
                                                                  height="12px"
                                                                  viewBox={Object {}}
                                                                  width="12px"
                                                                >
                                                                  <svg
                                                                    className="eqrebog3 css-1jjmnki-StyledSvg-StyledInlineSvg e2idor0"
                                                                    height="12px"
                                                                    viewBox={Object {}}
                                                                    width="12px"
                                                                  >
                                                                    <use
                                                                      href="#test"
                                                                      xlinkHref="#test"
                                                                    />
                                                                  </svg>
                                                                </StyledSvg>
                                                              </InlineSvg>
                                                            </StyledInlineSvg>
                                                          </span>
                                                        </Component>
                                                      </Icon>
                                                    </span>
                                                  </Component>
                                                </ButtonLabel>
                                              </button>
                                            </Component>
                                          </StyledButton>
                                        </Button>
                                      </a>
                                      <Modal
                                        animation={false}
                                        autoFocus={true}
                                        backdrop={true}
                                        bsClass="modal"
                                        dialogComponentClass={[Function]}
                                        enforceFocus={true}
                                        keyboard={true}
                                        manager={
                                          ModalManager {
                                            "add": [Function],
                                            "containers": Array [],
                                            "data": Array [],
                                            "handleContainerOverflow": true,
                                            "hideSiblingNodes": true,
                                            "isTopModal": [Function],
                                            "modals": Array [],
                                            "remove": [Function],
                                          }
                                        }
                                        onHide={[Function]}
                                        renderBackdrop={[Function]}
                                        restoreFocus={true}
                                        show={false}
                                      >
                                        <Modal
                                          autoFocus={true}
                                          backdrop={true}
                                          backdropClassName="modal-backdrop"
                                          containerClassName="modal-open"
                                          enforceFocus={true}
                                          keyboard={true}
                                          manager={
                                            ModalManager {
                                              "add": [Function],
                                              "containers": Array [],
                                              "data": Array [],
                                              "handleContainerOverflow": true,
                                              "hideSiblingNodes": true,
                                              "isTopModal": [Function],
                                              "modals": Array [],
                                              "remove": [Function],
                                            }
                                          }
                                          onEntering={[Function]}
                                          onExited={[Function]}
                                          onHide={[Function]}
                                          renderBackdrop={[Function]}
                                          restoreFocus={true}
                                          show={false}
                                        />
                                      </Modal>
                                    </Confirm>
                                  </LinkWithConfirmation>
                                </Tooltip>
                              </div>
                            </Styled(div)>
                          </ForwardRef>
                        </div>
                      </PanelItem>
                      <PanelItem
                        alignItems="center"
                        className="ref-tag-row"
                        key="environment"
                        p={0}
                      >
                        <div
                          className="ref-tag-row css-1mkt2d7-PanelItem eo8n7lk0"
                        >
                          <ForwardRef
                            alignItems="flex-end"
                            flex="1"
                            p={2}
                          >
                            <Styled(div)
                              alignItems="flex-end"
                              flex="1"
                              p={2}
                            >
                              <div
                                className="css-ahv9sc"
                              >
                                <span>
                                  environment
                                </span>
                              </div>
                            </Styled(div)>
                          </ForwardRef>
                          <ForwardRef
                            alignItems="center"
                            p={2}
                          >
                            <Styled(div)
                              alignItems="center"
                              p={2}
                            >
                              <div
                                className="css-1ioydag"
                              >
                                <Tooltip
                                  disabled={false}
                                  title="This tag cannot be deleted."
                                >
                                  <LinkWithConfirmation
                                    className="tip"
                                    disabled={true}
                                    message="Are you sure you want to remove this tag?"
                                    onConfirm={[Function]}
                                    title="This tag cannot be deleted."
                                  >
                                    <Confirm
                                      cancelText="Cancel"
                                      confirmText="Confirm"
                                      disableConfirmButton={false}
                                      disabled={true}
                                      message="Are you sure you want to remove this tag?"
                                      onConfirm={[Function]}
                                      priority="primary"
                                      stopPropagation={false}
                                    >
                                      <a
                                        className="tip disabled"
                                        disabled={true}
                                        onClick={[Function]}
                                        title="This tag cannot be deleted."
                                      >
                                        <Button
                                          data-test-id="delete"
                                          disabled={true}
                                          icon="icon-trash"
                                          size="xsmall"
                                        >
                                          <StyledButton
                                            aria-disabled={true}
                                            data-test-id="delete"
                                            disabled={true}
                                            href={null}
                                            onClick={[Function]}
                                            role="button"
                                            size="xsmall"
                                            to={null}
                                          >
                                            <Component
                                              aria-disabled={true}
                                              className="css-1ujzp8g-StyledButton-getColors eqrebog0"
                                              data-test-id="delete"
                                              href={null}
                                              onClick={[Function]}
                                              role="button"
                                              size="xsmall"
                                              to={null}
                                            >
                                              <button
                                                aria-disabled={true}
                                                className="css-1ujzp8g-StyledButton-getColors eqrebog0"
                                                data-test-id="delete"
                                                href={null}
                                                onClick={[Function]}
                                                role="button"
                                                size="xsmall"
                                                to={null}
                                              >
                                                <ButtonLabel
                                                  size="xsmall"
                                                >
                                                  <Component
                                                    className="css-uthd1f-ButtonLabel eqrebog1"
                                                    size="xsmall"
                                                  >
                                                    <span
                                                      className="css-uthd1f-ButtonLabel eqrebog1"
                                                    >
                                                      <Icon
                                                        hasChildren={false}
                                                        size="xsmall"
                                                      >
                                                        <Component
                                                          className="css-ljhpxy-Icon eqrebog2"
                                                          hasChildren={false}
                                                          size="xsmall"
                                                        >
                                                          <span
                                                            className="css-ljhpxy-Icon eqrebog2"
                                                            size="xsmall"
                                                          >
                                                            <StyledInlineSvg
                                                              size="12px"
                                                              src="icon-trash"
                                                            >
                                                              <InlineSvg
                                                                className="css-1ov3rcq-StyledInlineSvg eqrebog3"
                                                                size="12px"
                                                                src="icon-trash"
                                                              >
                                                                <StyledSvg
                                                                  className="css-1ov3rcq-StyledInlineSvg eqrebog3"
                                                                  height="12px"
                                                                  viewBox={Object {}}
                                                                  width="12px"
                                                                >
                                                                  <svg
                                                                    className="eqrebog3 css-1jjmnki-StyledSvg-StyledInlineSvg e2idor0"
                                                                    height="12px"
                                                                    viewBox={Object {}}
                                                                    width="12px"
                                                                  >
                                                                    <use
                                                                      href="#test"
                                                                      xlinkHref="#test"
                                                                    />
                                                                  </svg>
                                                                </StyledSvg>
                                                              </InlineSvg>
                                                            </StyledInlineSvg>
                                                          </span>
                                                        </Component>
                                                      </Icon>
                                                    </span>
                                                  </Component>
                                                </ButtonLabel>
                                              </button>
                                            </Component>
                                          </StyledButton>
                                        </Button>
                                      </a>
                                      <Modal
                                        animation={false}
                                        autoFocus={true}
                                        backdrop={true}
                                        bsClass="modal"
                                        dialogComponentClass={[Function]}
                                        enforceFocus={true}
                                        keyboard={true}
                                        manager={
                                          ModalManager {
                                            "add": [Function],
                                            "containers": Array [],
                                            "data": Array [],
                                            "handleContainerOverflow": true,
                                            "hideSiblingNodes": true,
                                            "isTopModal": [Function],
                                            "modals": Array [],
                                            "remove": [Function],
                                          }
                                        }
                                        onHide={[Function]}
                                        renderBackdrop={[Function]}
                                        restoreFocus={true}
                                        show={false}
                                      >
                                        <Modal
                                          autoFocus={true}
                                          backdrop={true}
                                          backdropClassName="modal-backdrop"
                                          containerClassName="modal-open"
                                          enforceFocus={true}
                                          keyboard={true}
                                          manager={
                                            ModalManager {
                                              "add": [Function],
                                              "containers": Array [],
                                              "data": Array [],
                                              "handleContainerOverflow": true,
                                              "hideSiblingNodes": true,
                                              "isTopModal": [Function],
                                              "modals": Array [],
                                              "remove": [Function],
                                            }
                                          }
                                          onEntering={[Function]}
                                          onExited={[Function]}
                                          onHide={[Function]}
                                          renderBackdrop={[Function]}
                                          restoreFocus={true}
                                          show={false}
                                        />
                                      </Modal>
                                    </Confirm>
                                  </LinkWithConfirmation>
                                </Tooltip>
                              </div>
                            </Styled(div)>
                          </ForwardRef>
                        </div>
                      </PanelItem>
                      <PanelItem
                        alignItems="center"
                        className="ref-tag-row"
                        key="user"
                        p={0}
                      >
                        <div
                          className="ref-tag-row css-1mkt2d7-PanelItem eo8n7lk0"
                        >
                          <ForwardRef
                            alignItems="flex-end"
                            flex="1"
                            p={2}
                          >
                            <Styled(div)
                              alignItems="flex-end"
                              flex="1"
                              p={2}
                            >
                              <div
                                className="css-ahv9sc"
                              >
                                <span>
                                  user
                                </span>
                              </div>
                            </Styled(div)>
                          </ForwardRef>
                          <ForwardRef
                            alignItems="center"
                            p={2}
                          >
                            <Styled(div)
                              alignItems="center"
                              p={2}
                            >
                              <div
                                className="css-1ioydag"
                              >
                                <Tooltip
                                  title="This tag cannot be deleted."
                                >
                                  <LinkWithConfirmation
                                    className="tip"
                                    disabled={true}
                                    message="Are you sure you want to remove this tag?"
                                    onConfirm={[Function]}
                                    title="This tag cannot be deleted."
                                  >
                                    <Confirm
                                      cancelText="Cancel"
                                      confirmText="Confirm"
                                      disableConfirmButton={false}
                                      disabled={true}
                                      message="Are you sure you want to remove this tag?"
                                      onConfirm={[Function]}
                                      priority="primary"
                                      stopPropagation={false}
                                    >
                                      <a
                                        className="tip disabled"
                                        disabled={true}
                                        onClick={[Function]}
                                        title="This tag cannot be deleted."
                                      >
                                        <Button
                                          data-test-id="delete"
                                          disabled={true}
                                          icon="icon-trash"
                                          size="xsmall"
                                        >
                                          <StyledButton
                                            aria-disabled={true}
                                            data-test-id="delete"
                                            disabled={true}
                                            href={null}
                                            onClick={[Function]}
                                            role="button"
                                            size="xsmall"
                                            to={null}
                                          >
                                            <Component
                                              aria-disabled={true}
                                              className="css-1ujzp8g-StyledButton-getColors eqrebog0"
                                              data-test-id="delete"
                                              href={null}
                                              onClick={[Function]}
                                              role="button"
                                              size="xsmall"
                                              to={null}
                                            >
                                              <button
                                                aria-disabled={true}
                                                className="css-1ujzp8g-StyledButton-getColors eqrebog0"
                                                data-test-id="delete"
                                                href={null}
                                                onClick={[Function]}
                                                role="button"
                                                size="xsmall"
                                                to={null}
                                              >
                                                <ButtonLabel
                                                  size="xsmall"
                                                >
                                                  <Component
                                                    className="css-uthd1f-ButtonLabel eqrebog1"
                                                    size="xsmall"
                                                  >
                                                    <span
                                                      className="css-uthd1f-ButtonLabel eqrebog1"
                                                    >
                                                      <Icon
                                                        hasChildren={false}
                                                        size="xsmall"
                                                      >
                                                        <Component
                                                          className="css-ljhpxy-Icon eqrebog2"
                                                          hasChildren={false}
                                                          size="xsmall"
                                                        >
                                                          <span
                                                            className="css-ljhpxy-Icon eqrebog2"
                                                            size="xsmall"
                                                          >
                                                            <StyledInlineSvg
                                                              size="12px"
                                                              src="icon-trash"
                                                            >
                                                              <InlineSvg
                                                                className="css-1ov3rcq-StyledInlineSvg eqrebog3"
                                                                size="12px"
                                                                src="icon-trash"
                                                              >
                                                                <StyledSvg
                                                                  className="css-1ov3rcq-StyledInlineSvg eqrebog3"
                                                                  height="12px"
                                                                  viewBox={Object {}}
                                                                  width="12px"
                                                                >
                                                                  <svg
                                                                    className="eqrebog3 css-1jjmnki-StyledSvg-StyledInlineSvg e2idor0"
                                                                    height="12px"
                                                                    viewBox={Object {}}
                                                                    width="12px"
                                                                  >
                                                                    <use
                                                                      href="#test"
                                                                      xlinkHref="#test"
                                                                    />
                                                                  </svg>
                                                                </StyledSvg>
                                                              </InlineSvg>
                                                            </StyledInlineSvg>
                                                          </span>
                                                        </Component>
                                                      </Icon>
                                                    </span>
                                                  </Component>
                                                </ButtonLabel>
                                              </button>
                                            </Component>
                                          </StyledButton>
                                        </Button>
                                      </a>
                                      <Modal
                                        animation={false}
                                        autoFocus={true}
                                        backdrop={true}
                                        bsClass="modal"
                                        dialogComponentClass={[Function]}
                                        enforceFocus={true}
                                        keyboard={true}
                                        manager={
                                          ModalManager {
                                            "add": [Function],
                                            "containers": Array [],
                                            "data": Array [],
                                            "handleContainerOverflow": true,
                                            "hideSiblingNodes": true,
                                            "isTopModal": [Function],
                                            "modals": Array [],
                                            "remove": [Function],
                                          }
                                        }
                                        onHide={[Function]}
                                        renderBackdrop={[Function]}
                                        restoreFocus={true}
                                        show={false}
                                      >
                                        <Modal
                                          autoFocus={true}
                                          backdrop={true}
                                          backdropClassName="modal-backdrop"
                                          containerClassName="modal-open"
                                          enforceFocus={true}
                                          keyboard={true}
                                          manager={
                                            ModalManager {
                                              "add": [Function],
                                              "containers": Array [],
                                              "data": Array [],
                                              "handleContainerOverflow": true,
                                              "hideSiblingNodes": true,
                                              "isTopModal": [Function],
                                              "modals": Array [],
                                              "remove": [Function],
                                            }
                                          }
                                          onEntering={[Function]}
                                          onExited={[Function]}
                                          onHide={[Function]}
                                          renderBackdrop={[Function]}
                                          restoreFocus={true}
                                          show={false}
                                        />
                                      </Modal>
                                    </Confirm>
                                  </LinkWithConfirmation>
                                </Tooltip>
                              </div>
                            </Styled(div)>
                          </ForwardRef>
                        </div>
                      </PanelItem>
                    </Access>
                  </AccessContainer>
                </withConfig(AccessContainer)>
              </div>
            </PanelBody>
          </div>
        </Component>
      </Panel>
    </DocumentTitle>
  </SideEffect(DocumentTitle)>
</ProjectTags>
`;
